plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower-mini' version '1.2.1'
	id 'maven-publish'
}
repositories {
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.terraformersmc.com/releases" }
	maven {
		url = "https://storage.googleapis.com/devan-maven/"
	}
	maven { url = "https://jitpack.io" }
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven { url = "https://server.bbkr.space/artifactory/libs-release" }
	maven { url = "https://www.cursemaven.com" }
}
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"


	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation ('com.github.Fusion-Flux:GravityChanger:v0.7.6')

	include ('com.github.Fusion-Flux:GravityChanger:v0.7.6')


	// Replace modImplementation with modApi if you expose components in your own API
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:4.1.4"
	// Includes Cardinal Components API as a Jar-in-Jar dependency (optional but recommended)
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:4.1.4"

}



processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}
java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}